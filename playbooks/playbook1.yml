---
- name: Install various applications on Ubuntu
  hosts: local
  become: yes
  gather_facts: yes # Ensures ansible_distribution_release is available

  vars:
    NODEJS_VERSION: "20"

  tasks:
    # Update apt cache before adding repositories
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    # Import GPG keys for repositories
    - name: Import Microsoft GPG key for VSCode
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Import Google Chrome GPG key
      ansible.builtin.apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    # Add software repositories
    - name: Add VSCode repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/repos/code stable main"
        state: present
        filename: vscode
        update_cache: yes

    - name: Add Google Chrome repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
        state: present
        filename: google-chrome
        update_cache: yes

    # Install Visual Studio Code, Google Chrome
    - name: Install Visual Studio Code and Google Chrome
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - code
        - google-chrome-stable

    # Node.js Installation
    - name: Install Node.js dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - ca-certificates
        - curl
        - gnupg

    - name: Add NodeSource GPG key
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: Add NodeSource repository
      ansible.builtin.apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x {{ ansible_lsb.codename }} main"
        state: present
        filename: nodesource
        update_cache: yes

    - name: Install Node.js
      ansible.builtin.apt:
        name: nodejs
        state: present

    # Slack Installation
    - name: Check if Slack is installed
      ansible.builtin.command: dpkg -l slack-desktop
      register: slack_installed
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: Download Slack .deb package
      ansible.builtin.get_url:
        url: https://downloads.slack-edge.com/releases/linux/4.36.2/prod/x64/slack-desktop-4.36.2-amd64.deb
        dest: "/tmp/slack-desktop.deb"
      when: slack_installed.rc != 0

    - name: Install Slack from downloaded .deb package
      ansible.builtin.apt:
        deb: /tmp/slack-desktop.deb
      when: slack_installed.rc != 0

    # Postman Installation
    - name: Check if Postman is installed
      ansible.builtin.stat:
        path: /opt/Postman
      register: postman_installed

    - name: Install Postman
      ansible.builtin.shell: |
        curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      args:
        executable: /bin/bash
      become: true
      when: not postman_installed.stat.exists
